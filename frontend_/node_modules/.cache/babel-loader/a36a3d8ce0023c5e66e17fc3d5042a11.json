{"ast":null,"code":"var _jsxFileName = \"/Users/xun/Desktop/Group-18-Sapphire-Snail/frontend_/src/views/Main/ForumEngine/AddComment.jsx\";\nimport { Comment, Avatar, Form, Button, List, Input } from 'antd';\nimport React from 'react';\nimport moment from 'moment';\nimport CommentBox from './CommentBox';\nimport './Forum.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\n\nconst CommentList = ({\n  comments\n}) => /*#__PURE__*/_jsxDEV(List, {\n  dataSource: comments,\n  header: `${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`,\n  itemLayout: \"horizontal\",\n  renderItem: props => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CommentBox\",\n    children: /*#__PURE__*/_jsxDEV(CommentBox, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 55\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 26\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this);\n\n_c = CommentList;\n\nconst Editor = ({\n  onChange,\n  onSubmit,\n  submitting,\n  value\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n    children: /*#__PURE__*/_jsxDEV(TextArea, {\n      rows: 4,\n      onChange: onChange,\n      value: value,\n      maxLength: 2000,\n      style: {\n        fontSize: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      htmlType: \"submit\",\n      loading: submitting,\n      onClick: onSubmit,\n      type: \"primary\",\n      children: \"Add Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n\n_c2 = Editor;\n\nclass AddComment extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: [],\n      submitting: false,\n      value: ''\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        await axios.get('http://localhost:5000/pageComments/get/' + localStorage.event).then(res => {\n          console.log(res.data);\n          this.setState({\n            comments: res.data\n          });\n        }); //console.log(data)\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleSubmit = async () => {\n      localStorage.setItem('keyboardInUse', 'no');\n\n      if (!this.state.value) {\n        return;\n      }\n\n      this.setState({\n        submitting: true\n      });\n      setTimeout(async () => {\n        this.setState({\n          submitting: false,\n          value: '',\n          comments: [...this.state.comments, {\n            author: 'Han Solo',\n            avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n            content: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: this.state.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 22\n            }, this),\n            datetime: moment().fromNow()\n          }]\n        });\n        const data = {\n          pageName: localStorage.event,\n          comments: this.state.comments\n        }; //add comments to database\n\n        try {\n          await axios.post('http://localhost:5000/pageComments/add', data).then(res => console.log(res.data)); //console.log(data)\n        } catch (error) {\n          console.log(error);\n          await axios.post('http://localhost:5000/pageComments/update', data).then(res => console.log(res.data));\n          console.log(data);\n        }\n      }, 1000);\n    };\n\n    this.handleChange = e => {\n      localStorage.setItem('keyboardInUse', 'yes');\n      this.setState({\n        value: e.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      comments,\n      submitting,\n      value\n    } = this.state; //console.log(comments);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [comments.length > 0 && /*#__PURE__*/_jsxDEV(CommentList, {\n        comments: comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Comment, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n          alt: \"Han Solo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this),\n        content: /*#__PURE__*/_jsxDEV(Editor, {\n          onChange: this.handleChange,\n          onSubmit: this.handleSubmit,\n          submitting: submitting,\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default AddComment;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CommentList\");\n$RefreshReg$(_c2, \"Editor\");","map":{"version":3,"sources":["/Users/xun/Desktop/Group-18-Sapphire-Snail/frontend_/src/views/Main/ForumEngine/AddComment.jsx"],"names":["Comment","Avatar","Form","Button","List","Input","React","moment","CommentBox","axios","TextArea","CommentList","comments","length","props","Editor","onChange","onSubmit","submitting","value","fontSize","AddComment","Component","state","componentDidMount","get","localStorage","event","then","res","console","log","data","setState","error","handleSubmit","setItem","setTimeout","author","avatar","content","datetime","fromNow","pageName","post","handleChange","e","target","render"],"mappings":"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","sourcesContent":["import { Comment, Avatar, Form, Button, List, Input } from 'antd';\nimport React from 'react';\nimport moment from 'moment';\nimport CommentBox from './CommentBox';\nimport './Forum.css';\nimport axios from 'axios';\n\nconst { TextArea } = Input;\n\nconst CommentList = ({ comments }) => (\n  <List\n    dataSource={comments}\n    header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n    itemLayout=\"horizontal\"\n    renderItem={props => <div className=\"CommentBox\" ><CommentBox {...props} /></div>}\n  />\n);\n\nconst Editor = ({ onChange, onSubmit, submitting, value }) => (\n  <>\n    <Form.Item>\n      <TextArea  rows={4} onChange={onChange} value={value} maxLength={2000} style={{fontSize: 20 }}/>\n    </Form.Item>\n    <Form.Item>\n      <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n        Add Comment\n      </Button>\n    </Form.Item>\n  </>\n);\n\nclass AddComment extends React.Component {\n  state = {\n    comments: [],\n    submitting: false,\n    value: '',\n  };\n\n  componentDidMount =async()=>{\n    try {\n      await axios.get('http://localhost:5000/pageComments/get/'+localStorage.event)\n        .then(res =>\n          {\n            console.log(res.data);\n             this.setState({ comments: res.data});\n          }\n        );\n        //console.log(data)\n      } catch (error) {\n        console.log(error);\n      } \n  }\n\n  handleSubmit = async () => {\n    localStorage.setItem('keyboardInUse','no');\n    if (!this.state.value) {\n      return;\n    }\n\n    this.setState({\n      submitting: true,\n    });\n\n    setTimeout( async() => {\n      this.setState({\n        submitting: false,\n        value: '',\n        comments: [\n          ...this.state.comments,\n          {\n            author: 'Han Solo',\n            avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n            content: <p>{this.state.value}</p>,\n            datetime: moment().fromNow(),\n          },\n        ],\n      });\n      const data = {\n        pageName: localStorage.event,\n        comments: this.state.comments\n      }\n\n      //add comments to database\n  \n      try {\n          await axios.post('http://localhost:5000/pageComments/add', data)\n            .then(res => console.log(res.data));\n            //console.log(data)\n          } catch (error) {\n            console.log(error);\n            await axios.post('http://localhost:5000/pageComments/update', data)\n            .then(res => console.log(res.data));\n            console.log(data);\n          } \n    }, 1000);\n\n  };\n\n  handleChange = e => {\n    localStorage.setItem('keyboardInUse','yes');\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  render() {\n    const { comments, submitting, value } = this.state;\n\n    //console.log(comments);\n\n    return (\n      <>\n        {comments.length > 0 && <CommentList comments={comments} />}\n        <Comment\n          avatar={\n            <Avatar\n              src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n              alt=\"Han Solo\"\n            />\n          }\n          content={\n            <Editor\n              onChange={this.handleChange}\n              onSubmit={this.handleSubmit}\n              submitting={submitting}\n              value={value}\n            />\n          }\n        />\n      </>\n    );\n  }\n}\n\nexport default AddComment;"]},"metadata":{},"sourceType":"module"}